{
  "openapi": "3.0.0",
  "info": {
    "title": "Nexus API",
    "description": "Nexus API Endpoints",
    "contact": {
      "name": "LEAF Support",
      "email": "leafsupport@ablevets.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://localhost/LEAF_Nexus/api/",
      "description": "Local DEV server (uses test data)"
    },
    {
      "url": "https://leaf.va.gov:8443/LEAF_Nexus/api",
      "description": "Production server (uses live data)"
    }
  ],
  "components": {
    "schemas": {
      "employee": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        },
        "example": {
          "firstName": "Lilly",
          "lastName": "Wang",
          "middleName": null,
          "userName": "lillyw"
        }
      },
      "groups": {
        "type": "object",
        "properties": {
          "groupTitle": {
            "type": "string"
          },
          "parentID": {
            "type": "integer"
          }
        },
        "example": {
          "groupTitle": "LWTesting",
          "parentID": 0
        }
      },
      "positions": {
        "type": "object",
        "properties": {
          "positionTitle": {
            "type": "string"
          },
          "parentID": {
            "type": "integer"
          },
          "positionID": {
            "type": "integer"
          }
        },
        "example": {
          "positionTitle": "Test Position Title Super",
          "parentID": 0,
          "positionID": 2
        }
      }
    },
    "responses": {
      "404NotFound": {
        "description": "The specified resource was not found."
      },
      "400InvalidID": {
        "description": "The specified resource was invalid."
      },
      "default": {
        "description": "Unexpected error"
      }
    },
    "parameters": {
      "cookieParam": {
        "name": "cookie",
        "in": "header",
        "description": "PHPSESSID to be passed as a header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "tokenParam": {
        "name": "CSRFToken",
        "in": "header",
        "description": "CSRFToken to be passed as a header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "responseParam": {
        "name": "Access-Control-Allow-Origin",
        "in": "header",
        "description": "C",
        "required": true,
        "schema": {
          "type": "string",
          "default": "*"
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Give an API endpoint as query parameter for GET operation",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true,
            "example": "employee/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "summary": "Give an API endpoint as query parameter for POST operation",
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true,
            "example": "employee/new"
          }
        ],
        "requestBody": {
          "description": "Provide a requestBody content for the endpoint.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              },
              "example": {
                "firstName": "Lilly",
                "lastName": "Wang",
                "middleName": null,
                "userName": "lillyw"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Give an API endpoint as query parameter for DELETE operation",
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "allowReserved": true,
            "example": "employee/{empUID}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/employee/new": {
      "post": {
        "summary": "Call addNew()",
        "description": "original endpoint:employee/new; calls addNew({firstName}, {lastName}, {middleName}, {userName})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/employee/{empUID}": {
      "get": {
        "summary": "Call getSummary()",
        "description": "original endpoint:employee/[digit]; calls getSummary({empUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employee"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Call modify()",
        "description": "original endpoint:employee/[digit]; calls modify({empUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "empUID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employee"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Call disableAccount()",
        "description": "original endpoint:employee/[digit]; calls disableAccount({empUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "empUID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employee"
                }
              }
            }
          }
        }
      }
    },
    "/employee/{empUID}/activate": {
      "post": {
        "summary": "Call enableAccount()",
        "description": "original endpoint:employee/[digit]/activate; calls enableAccount({empUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "empUID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/employee/{empUID}/backup": {
      "get": {
        "summary": "Call getBackups()",
        "description": "original endpoint:employee/[digit]/backup; calls getBackups({empUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/employee/{empUID}/backup/{backupEmpUID}": {
      "post": {
        "summary": "Call setBackup()",
        "description": "original endpoint:employee/[digit]/backup; calls setBackup({empUID}, {backupEmpUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "backupEmpUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single employee."
          }
        }
      },
      "delete": {
        "summary": "Call removeBackup()",
        "description": "original endpoint:employee/[digit]/backup/[digit]; calls removeBackup({empUID}, {backupEmpUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "backupEmpUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/employee/{empUID}/backupFor": {
      "get": {
        "summary": "Call getBackupsFor()",
        "description": "original endpoint:employee/[digit]/backupFor; calls getBackupsFor({empUID})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/employee/import/{userName}": {
      "post": {
        "summary": "Call importFromNational()",
        "description": "original endpoint:employee/import/[text]; calls importFromNational({userName})",
        "tags": [
          "employee"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "description": "empUID field in Employee table.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/new": {
      "post": {
        "summary": "Call addNew()",
        "description": "original endpoint:employee/new; calls addNew({title}, {parentID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/groups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}": {
      "get": {
        "summary": "Call Group.php getTitle()",
        "description": "original endpoint:group/[digit]/data/[digit]; calls getAllData({groupID}), Group.php getTitle({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/groups"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Call modify()",
        "description": "original endpoint:group/[digit]; calls modify({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "description": "groupID field in group table.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/groups"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Call deleteGroup()",
        "description": "original endpoint:group/[digit]; calls deleteGroup({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "groupID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/list/all/{offset}/{quantity}": {
      "get": {
        "summary": "Call listGroups()",
        "description": "original endpoint:group/list; calls listGroups(0, {offset}, {quantity})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/list/parentGroup/{parentID}/{offset}/{quantity}": {
      "get": {
        "summary": "Call listGroups()",
        "description": "original endpoint:group/[digit]/list; calls listGroups({parentID}, {offset}, {quantity})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "parentID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "quantity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/indicator/{indicatorID}": {
      "get": {
        "summary": "Call getAllData()",
        "description": "original endpoint:group/[digit]/data/[digit]; calls getAllData({groupID}, {indicatorID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/employee": {
      "get": {
        "summary": "Call listGroupEmployees()",
        "description": "original endpoint:group/[digit]/employees; calls listGroupEmployees({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/employee/all": {
      "get": {
        "summary": "Call listGroupEmployeesAll()",
        "description": "original endpoint:group/[digit]/employees/all; calls listGroupEmployeesAll({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/employee/detailed/{offset}/{limit}": {
      "get": {
        "summary": "Calls listGroupEmployeesDetailed()",
        "description": "original endpoint:group/[digit]/employees/detailed; calls listGroupEmployeesDetailed({groupID}, {offset}, {limit})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "offset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/employee/{empUID}": {
      "post": {
        "summary": "Calls addEmployee()",
        "description": "original endpoint:'group/[digit]/employee; calls addEmployee({groupID}, {empUID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Call removeEmployee()",
        "description": "original endpoint:group/[digit]/employee/[digit]; calls removeEmployee({groupID}, {empUID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/leader": {
      "get": {
        "summary": "Call getGroupLeader()",
        "description": "original endpoint:group/[digit]/leader; calls getGroupLeader({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/permissions/add/{categoryID}/{categoryUID}/{permissionType}": {
      "post": {
        "summary": "Call addPermission()",
        "description": "original endpoint:group/[digit]/permissions/addEmployee || group/[digit]/permissions/addPosition || group/[digit]/permission/[text]/[digit]/[text]/toggle; calls addPermission({groupID}, {categoryID}, {categoryUID}, {permissionType})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "position",
                "group",
                "employee"
              ]
            }
          },
          {
            "name": "categoryUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "permissionType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/permissions/toggle/{categoryID}/{categoryUID}/{permissionType}": {
      "post": {
        "summary": "Call togglePermission()",
        "description": "original endpoint:group/[digit]/permission/[text]/[digit]/[text]/toggle; calls togglePermission({groupID}, {categoryID}, {categoryUID}",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "permissionType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/position": {
      "get": {
        "summary": "Call listGroupPositions()",
        "description": "original endpoint:group/[digit]/positions; calls listGroupPositions({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/position/{positionID}": {
      "post": {
        "summary": "Call addPosition()",
        "description": "original endpoint:group/[digit]/position; calls addPosition({groupID}, {positionID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Call removePosition()",
        "description": "original endpoint:group/[digit]/position/[digit]; calls removePosition({groupID}, {positionID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "groupID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "description": "groupID field in group table.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/summary": {
      "get": {
        "summary": "Call getSummary()",
        "description": "original endpoint:group/[digit]/summary; calls getSummary({groupID})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/tag/{tag}": {
      "post": {
        "summary": "Call addTag()",
        "description": "original endpoint:group/[digit]/tag; calls addTag({groupID}, {tag})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Call deleteTag()",
        "description": "original endpoint:group/[digit]/tag; calls deleteTag({groupID}, {tag}))",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "groupID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/group/{groupID}/title/{title}/{abbreviatedTitle}": {
      "post": {
        "summary": "Call editTitle()",
        "description": "original endpoint:group/[digit]/title; calls editTitle({groupID}, {title}, {abbreviatedTitle})",
        "tags": [
          "group"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "abbreviatedTitle",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/new": {
      "post": {
        "summary": "Call addNew()",
        "description": "original endpoint:position; calls addNew({title}, {parentID}, {groupID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/positions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}": {
      "get": {
        "summary": "Call getAllData()",
        "description": "original endpoint:position/[digit]; calls getAllData({positionID}), getTitle({positionID}), getSubordinates({positionID}), getAllTags({positionID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/positions"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Call modify()",
        "description": "original endpoint:position/[digit]; calls modify({positionID}",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Call deletePosition()",
        "description": "original endpoint:position/[digit]; calls deletePosition({positionID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/employee": {
      "get": {
        "summary": "Call getEmployees()",
        "description": "original endpoint:position/[digit]/employees; calls getEmployees({positionID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/employee/{empUID}": {
      "delete": {
        "summary": "Call removeEmployee()",
        "description": "original endpoint:position/[digit]/employee/[digit]; calls removeEmployee({positionID}, {empUID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/employee/{empUID}/{isActing}": {
      "post": {
        "summary": "Call addEmployee()",
        "description": "original endpoint:position/[digit]/employee; calls addEmployee({positionID}, {empUID}, {isActing})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "empUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "isActing",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/permissions/add/{categoryID}/{categoryUID}/{permissionType}": {
      "post": {
        "summary": "Call addPermission()",
        "description": "original endpoint:position/[digit]/permissions/addEmployee || position/[digit]/permissions/addPosition || position/[digit]/permissions/addGroup; calls addPermission({positionID}, {categoryID}, {categoryUID}, {permissionType})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "position",
                "group",
                "employee"
              ]
            }
          },
          {
            "name": "categoryUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "permissionType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/permissions/toggle/{categoryID}/{categoryUID}/{permissionType}": {
      "post": {
        "summary": "Calls togglePermission()",
        "description": "original endpoint:position/[digit]/permission/[text]/[digit]/[text]/toggle; calls togglePermission({positionID}, {categoryID}, {categoryUID}, {permissionType})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "permissionType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/quadrad": {
      "get": {
        "summary": "Call getQuadrad()",
        "description": "original endpoint:position/[digit]/quadrad; calls getQuadrad({positionID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/service": {
      "get": {
        "summary": "Call getService()",
        "description": "original endpoint:position/[digit]/service; calls getService({positionID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/subordinates": {
      "get": {
        "summary": "Call getSubordinates()",
        "description": "original endpoint:position/[digit]/subordinates; calls getSubordinates({positionID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/supervisor": {
      "get": {
        "summary": "Call getSupervisor()",
        "description": "original endpoint:position/[digit]/supervisor; calls getSupervisor({positionID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/setLeader": {
      "post": {
        "summary": "Call addTag()",
        "description": "original endpoint:position/[digit]/setLeader'; calls addTag({positionID}, 'group_leader')",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/supervisor/{supervisorID}": {
      "post": {
        "summary": "Call setSupervisor()",
        "description": "original endpoint:position/[digit]/supervisor; calls setSupervisor({positionID}, {supervisorID})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "supervisorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/position/{positionID}/title/{title}": {
      "post": {
        "summary": "Call editTitle()",
        "description": "original endpoint:position/[digit]/title; calls editTitle({positionID}, {title})",
        "tags": [
          "position"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/reportTemplates": {
      "get": {
        "summary": "Call getReportTemplateList()",
        "description": "original endpoint:system/reportTemplates; calls getReportTemplateList()",
        "tags": [
          "reportTemplates"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/reportTemplates/new": {
      "post": {
        "summary": "Call newReportTemplate()",
        "description": "original endpoint:system/reportTemplates; calls newReportTemplate({filename})",
        "tags": [
          "reportTemplates"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "filename": {
                  "allowReserved": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/reportTemplates/{filename}": {
      "get": {
        "summary": "Call getReportTemplate()",
        "description": "original endpoint:system/reportTemplates; calls getReportTemplate({filename})",
        "tags": [
          "reportTemplates"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "summary": "Call setReportTemplate()",
        "description": "original endpoint:system/reportTemplates/[text]; calls setReportTemplate({filename})",
        "tags": [
          "reportTemplates"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Call removeReportTemplate()",
        "description": "original endpoint:system/reportTemplates/[text]; calls removeReportTemplate({filename})",
        "tags": [
          "reportTemplates"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/settings/heading/{heading}": {
      "post": {
        "summary": "Call setHeading()",
        "description": "original endpoint:system/settings/heading; calls setHeading({heading})",
        "tags": [
          "settings"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heading",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/settings/subHeading/{subHeading}": {
      "post": {
        "summary": "Call setSubHeading()",
        "description": "original endpoint:system/settings/subHeading; calls setSubHeading({subHeading})",
        "tags": [
          "settings"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subHeading",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/system/templates": {
      "get": {
        "summary": "Call getTemplateList()",
        "description": "original endpoint:system/templates; *** doesn't seem to exist; calls getTemplateList()",
        "tags": [
          "system"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/system/templates/{text}": {
      "get": {
        "summary": "Call getTemplate()",
        "description": "original endpoint:system/templates/[text]; *** doesn't seem to exist; calls getTemplate({text})",
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "summary": "Call setTemplate()",
        "description": "original endpoint:system/templates/[text]; *** doesn't seem to exist; calls setTemplate({text})",
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "delete": {
        "summary": "Call removeCustomTemplate()",
        "description": "original endpoint:system/templates/[text]; *** doesn't seem to exist; calls removeCustomTemplate({text})",
        "tags": [
          "system"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/permissions": {
      "get": {
        "summary": "Call getPrivileges()",
        "description": "original endpoint:indicator/[digit]/permissions; calls getPrivileges({indicatorID})",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/permissions/add/{categoryID}/{categoryUID}/{permissionType}": {
      "post": {
        "summary": "Calls addPermission()",
        "description": "original endpoint:indicator/[digit]/permissions/addEmployee || indicator/[digit]/permissions/addPosition || indicator/[digit]/permissions/addGroup; calls addPermission({indicatorID}, {categoryID}, {categoryUID}, {permissionType})",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "position",
                "group",
                "employee"
              ]
            }
          },
          {
            "name": "categoryUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "permissionType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/permissions/toggle/{categoryID}/{categoryUID}/{permissionType}": {
      "post": {
        "summary": "Calls togglePermission()",
        "description": "original endpoint:indicator/[digit]/permission/[text]/[digit]/[text]/toggle; calls togglePermission({indicatorID}, {categoryID}, {categoryUID}, {permissionType})",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "permissionType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/upload": {
      "post": {
        "summary": "Calls Data.php modify()",
        "description": "original endpoint:ajaxIndex.php?a=doupload; calls Data.php modify({indicatorID})",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/indicator/{indicatorID}/deleteAttachment/category/{categoryID}/{UID}/file/{file}": {
      "delete": {
        "summary": "Calls Data.php deleteAttachment()",
        "description": "original endpoint:ajaxIndex.php?a=deleteattachment; calls Data.php deleteAttachment({categoryID}, {UID}, {indicatorID}, {file})",
        "tags": [
          "indicator"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "categoryID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "UID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/tag/{tag}/parent": {
      "get": {
        "summary": "Call getParent()",
        "description": "original endpoint:tag/[text]/parent; calls getParent({tag})",
        "tags": [
          "tag"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/tag/{tag}/parent/{parentTag}": {
      "post": {
        "summary": "Calls setParent()",
        "description": "original endpoint:tag/[text]/parent; calls setParent({tag}, {parentTag})",
        "tags": [
          "tag"
        ],
        "parameters": [
          {
            "in": "cookie",
            "name": "PHPSESSID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "CSRFToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentTag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/nationalEmployee/{digit}": {
      "get": {
        "summary": "Call getSummary()",
        "description": "original endpoint:national/employee/[digit]; *** doesn't seem to exist; calls getSummary({digit})",
        "tags": [
          "nationalEmployee"
        ],
        "parameters": [
          {
            "name": "digit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/nationalEmployee/search/{search_terms}/{indicatorID}": {
      "get": {
        "summary": "Call search()",
        "description": "original endpoint:national/employee/search; calls search({search_terms}, {indicatorID})",
        "tags": [
          "nationalEmployee"
        ],
        "parameters": [
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/employee/{search_terms}/indicator/{indicatorID}": {
      "get": {
        "summary": "Call search()",
        "description": "original endpoint:employee/search; calls search({search_terms}, {indicatorID})",
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/employee/national/{search_terms}/indicator/{indicatorID}": {
      "get": {
        "summary": "Call search()",
        "description": "original endpoint:national/employee/search; calls search({search_terms}, {indicatorID})",
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indicatorID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/employee/userName/{userName}": {
      "get": {
        "summary": "Call lookupLogin()",
        "description": "original endpoint:employee/search/userName/[text]; calls lookupLogin({userName})",
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/group/{search_terms}/tag/{tag}": {
      "get": {
        "summary": "Call search()",
        "description": "original endpoint:group/search; calls search({search_terms}, {tag})",
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/position/{positionID}/parentTag/{tag}": {
      "get": {
        "summary": "Call findRootPositionByGroupTag()",
        "description": "original endpoint:position/[digit]/search/parentTag/[text]; calls findRootPositionByGroupTag({positionID}, {tag})",
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "positionID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/search/position/{search_terms}/tag/{tag}/employeeSearch{employeeSearch}": {
      "get": {
        "summary": "Call search()",
        "description": "original endpoint:position/search; calls search({search_terms}, {tag}, {employeeSearch})",
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "search_terms",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employeeSearch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    }
  }
}
