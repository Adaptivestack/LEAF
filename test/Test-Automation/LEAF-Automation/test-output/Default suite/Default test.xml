<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-OOHKJP3" failures="0" tests="31" name="Default test" time="0.373" errors="0" timestamp="2021-06-25T09:02:19 CDT">
  <testcase classname="Framework.setupFramework" name="@BeforeClass initializeFramework" time="-1.624629738961E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method initializeFramework but has not been marked @Optional or defined
in C:\Users\MaxRichard\AppData\Local\Temp\testng-eclipse--117951555\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method initializeFramework but has not been marked @Optional or defined
in C:\Users\MaxRichard\AppData\Local\Temp\testng-eclipse--117951555\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:270)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:358)
at org.testng.internal.Parameters.createParameters(Parameters.java:700)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:168)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass initializeFramework -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeClass setUp" time="-1.624629738977E9">
    <skipped/>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739001E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739026E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.62462973904E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739047E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739054E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.62462973907E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739079E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739087E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739096E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739102E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739114E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739122E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739134E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739143E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739156E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739167E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739176E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739201E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739211E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739214E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739235E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739249E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739253E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739258E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739266E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.62462973927E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739274E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739278E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739284E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739287E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Execution.adminUserAccessTest" name="@BeforeMethod setUp" time="-1.624629739291E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Framework.setupFramework" name="@AfterClass closeDown" time="-1.624629739295E9">
    <skipped/>
  </testcase> <!-- @AfterClass closeDown -->
  <testcase classname="Execution.adminUserAccessTest" name="testForCertPage" time="0.0">
    <skipped/>
  </testcase> <!-- testForCertPage -->
  <testcase classname="Execution.adminUserAccessTest" name="clickLeftMenuSysAdmins" time="0.0">
    <skipped/>
  </testcase> <!-- clickLeftMenuSysAdmins -->
  <testcase classname="Execution.adminUserAccessTest" name="clickLeftUserGroups" time="0.0">
    <skipped/>
  </testcase> <!-- clickLeftUserGroups -->
  <testcase classname="Execution.adminUserAccessTest" name="clickLeftMenuAllGroups" time="0.0">
    <skipped/>
  </testcase> <!-- clickLeftMenuAllGroups -->
  <testcase classname="Execution.adminUserAccessTest" name="clickLeftMenuCreateGroup" time="0.0">
    <skipped/>
  </testcase> <!-- clickLeftMenuCreateGroup -->
  <testcase classname="Execution.adminUserAccessTest" name="inputGroupTitle" time="0.0">
    <skipped/>
  </testcase> <!-- inputGroupTitle -->
  <testcase classname="Execution.adminUserAccessTest" name="clickSaveButton" time="0.0">
    <skipped/>
  </testcase> <!-- clickSaveButton -->
  <testcase classname="Execution.adminUserAccessTest" name="getNewlyCreatedUserGroup" time="0.0">
    <skipped/>
  </testcase> <!-- getNewlyCreatedUserGroup -->
  <testcase classname="Execution.adminUserAccessTest" name="findMemberInputBox" time="0.0">
    <skipped/>
  </testcase> <!-- findMemberInputBox -->
  <testcase classname="Execution.adminUserAccessTest" name="selectGroupMember" time="0.0">
    <skipped/>
  </testcase> <!-- selectGroupMember -->
  <testcase classname="Execution.adminUserAccessTest" name="saveNameToGroup1" time="0.0">
    <skipped/>
  </testcase> <!-- saveNameToGroup1 -->
  <testcase classname="Execution.adminUserAccessTest" name="getNewlyCreatedUserGroup2" time="0.0">
    <skipped/>
  </testcase> <!-- getNewlyCreatedUserGroup2 -->
  <testcase classname="Execution.adminUserAccessTest" name="findMemberInputBox2" time="0.0">
    <skipped/>
  </testcase> <!-- findMemberInputBox2 -->
  <testcase classname="Execution.adminUserAccessTest" name="selectGroupMember2" time="0.0">
    <skipped/>
  </testcase> <!-- selectGroupMember2 -->
  <testcase classname="Execution.adminUserAccessTest" name="saveNameToGroup2" time="0.0">
    <skipped/>
  </testcase> <!-- saveNameToGroup2 -->
  <testcase classname="Execution.adminUserAccessTest" name="getNewlyCreatedUserGroup3" time="0.0">
    <skipped/>
  </testcase> <!-- getNewlyCreatedUserGroup3 -->
  <testcase classname="Execution.adminUserAccessTest" name="getGroupMember1" time="0.0">
    <skipped/>
  </testcase> <!-- getGroupMember1 -->
  <testcase classname="Execution.adminUserAccessTest" name="removeGroupMember1" time="0.0">
    <skipped/>
  </testcase> <!-- removeGroupMember1 -->
  <testcase classname="Execution.adminUserAccessTest" name="getNewlyCreatedUserGroup4" time="0.0">
    <skipped/>
  </testcase> <!-- getNewlyCreatedUserGroup4 -->
  <testcase classname="Execution.adminUserAccessTest" name="deleteUserGroup" time="0.0">
    <skipped/>
  </testcase> <!-- deleteUserGroup -->
  <testcase classname="Execution.adminUserAccessTest" name="cancelDeleteUserGroup" time="0.0">
    <skipped/>
  </testcase> <!-- cancelDeleteUserGroup -->
  <testcase classname="Execution.adminUserAccessTest" name="deleteUserGroup2" time="0.0">
    <skipped/>
  </testcase> <!-- deleteUserGroup2 -->
  <testcase classname="Execution.adminUserAccessTest" name="confirmlDeleteUserGroup" time="0.0">
    <skipped/>
  </testcase> <!-- confirmlDeleteUserGroup -->
  <testcase classname="Execution.adminUserAccessTest" name="selectImportGroup" time="0.0">
    <skipped/>
  </testcase> <!-- selectImportGroup -->
  <testcase classname="Execution.adminUserAccessTest" name="cancelDialogueBox" time="0.0">
    <skipped/>
  </testcase> <!-- cancelDialogueBox -->
  <testcase classname="Execution.adminUserAccessTest" name="selectImportGroup2" time="0.0">
    <skipped/>
  </testcase> <!-- selectImportGroup2 -->
  <testcase classname="Execution.adminUserAccessTest" name="inputImportGroupTitle" time="0.0">
    <skipped/>
  </testcase> <!-- inputImportGroupTitle -->
  <testcase classname="Execution.adminUserAccessTest" name="selectGroupBasedOnSearch" time="0.0">
    <skipped/>
  </testcase> <!-- selectGroupBasedOnSearch -->
  <testcase classname="Execution.adminUserAccessTest" name="selectImportedGroupOnPage" time="0.0">
    <skipped/>
  </testcase> <!-- selectImportedGroupOnPage -->
  <testcase classname="Execution.adminUserAccessTest" name="inputImportGroupMember1" time="0.0">
    <skipped/>
  </testcase> <!-- inputImportGroupMember1 -->
  <testcase classname="Execution.adminUserAccessTest" name="saveGroup" time="0.0">
    <skipped/>
  </testcase> <!-- saveGroup -->
</testsuite> <!-- Default test -->
